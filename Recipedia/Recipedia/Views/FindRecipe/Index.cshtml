@model IEnumerable<Recipedia.Models.WebRecipeResultDTO>?

@{
    ViewData["Title"] = "Find Recipe";
}

<div class="find-recipe-wrapper">
    <div class="input-container">
        <div class="input-header">
            <h1>What's in Your Kitchen?</h1>
            <p>Type in your ingredients and we’ll find recipes you can make right now. No registration is required. Free, quick, and online.</p>
        </div>

        <form asp-action="Search" method="post" id="searchForm" class="search-form">
            <div class="ingredient-textarea">
                <div class="textarea-content">             
                    <div id="tagInput"
                         class="editable"
                         contenteditable="true"
                         data-placeholder="Type an ingredient and press [Enter] to add them here"></div>
                    <div id="tagsContainer"></div>
                </div>

                <button type="submit" class="btn-submit">
                    <i class="bi bi-search"></i> Search
                </button>
            </div>

            <input type="hidden" id="tagsHidden" name="ingredients" />
        </form>
        <script src="~/js/tagsInput.js"></script>
    </div>

    @if (Model != null && Model.Any())
    {
        var ingredients = ViewBag.VerifiedIngredients != null
        ? string.Join(", ", (List<string>)ViewBag.VerifiedIngredients)
        : "";

        <div class="results-container">
            <div class="results-header">
                <h3>Here's some recipes using @ingredients!</h3>
            </div>
            <div class="recipe-grid">
                @foreach (var recipe in Model)
                {
                    var isSaved = ViewBag.SavedUrls != null && ((List<string>)ViewBag.SavedUrls).Contains(recipe.Url);
                    <div class="recipe-result-container">
                        <div class="recipe-card">
                            <div class="save-btn">
                                @Html.AntiForgeryToken()
                                <button type="button" class="heart-btn @(isSaved ? "active" : "")"
                                        onclick="saveRecipe('@recipe.Title', '@recipe.Url', '@recipe.ImageUrl', '@recipe.Source', this)"
                                @(isSaved ? "disabled" : "")>
                                    <i class="bi bi-heart"></i>
                                    <i class="bi bi-heart-fill"></i>
                                </button>
                            </div>
                            <img src="@recipe.ImageUrl" alt="@recipe.Title" />

                            <a href="@recipe.Url" target="_blank" class="btn-go">VIEW RECIPE <i class="bi bi-box-arrow-up-right"></i></a>
                        </div>
                        <div class="recipe-source">
                            <i class="bi bi-globe btn-icon"></i> @recipe.Source
                        </div>
                        <h4>@recipe.Title</h4>
                    </div>
                }
            </div>
        </div>
    }
</div>

<script>
    function saveRecipe(title, url, imageUrl, source, button) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch('/Recipes/SaveRecipe', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': token
            },
            body: JSON.stringify({
                title: title,
                url: url,
                imageUrl: imageUrl,
                source: source
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.redirectToLogin) {
                // User not logged in - redirect to login
                window.location.href = '/Account/Login?returnUrl=' + encodeURIComponent(window.location.pathname + window.location.search);
            } else if (data.success) {
                // Recipe saved successfully
                button.classList.add('active');
                button.disabled = true;

                showNotification('Recipe saved!', 'success');
            } else {
                // Show error message
                showNotification(data.message || 'Failed to save recipe', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showNotification('An error occurred. Please try again.', 'error');
        });
    }

        function showNotification(message, type, tone = '') {
        const notification = document.createElement('div');
        const alertClass =
            type === 'success'
                ? `alert alert-success ${tone}`
                : 'alert alert-danger';

        notification.className = `${alertClass} position-fixed top-0 start-50 translate-middle-x mt-3 px-4 py-2 rounded-3 shadow`;
        notification.style.zIndex = '9999';
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => notification.remove(), 3000);
    }
</script>
